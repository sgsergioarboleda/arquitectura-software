#!/usr/bin/env python3
"""
Script para probar la conexi√≥n a MongoDB
"""
import os
from dotenv import load_dotenv
from services.mongodb_service import MongoDBService

def test_mongodb_connection():
    """Probar conexi√≥n a MongoDB"""
    print("üîç Probando conexi√≥n a MongoDB...")
    
    # Cargar variables de entorno
    load_dotenv()
    
    # Obtener configuraci√≥n
    mongodb_uri = os.getenv("MONGODB_URI")
    database_name = os.getenv("MONGODB_DATABASE", "universidad_db")
    
    if not mongodb_uri:
        print("‚ùå Error: MONGODB_URI no est√° configurada en el archivo .env")
        return False
    
    print(f"üì° URI: {mongodb_uri}")
    print(f"üóÑÔ∏è  Base de datos: {database_name}")
    
    # Crear instancia del servicio
    mongo_service = MongoDBService(mongodb_uri, database_name)
    
    # Intentar conectar
    if mongo_service.connect():
        print("‚úÖ Conexi√≥n exitosa a MongoDB")
        
        # Probar operaciones b√°sicas
        try:
            # Contar documentos en colecciones
            events_count = mongo_service.count_documents("events")
            lost_items_count = mongo_service.count_documents("lost_items")
            users_count = mongo_service.count_documents("usuarios")
            
            print(f"üìä Estad√≠sticas de la base de datos:")
            print(f"   - Eventos: {events_count}")
            print(f"   - Objetos perdidos: {lost_items_count}")
            print(f"   - Usuarios: {users_count}")
            
            # Cerrar conexi√≥n
            mongo_service.disconnect()
            print("üîå Conexi√≥n cerrada")
            return True
            
        except Exception as e:
            print(f"‚ùå Error al consultar la base de datos: {str(e)}")
            mongo_service.disconnect()
            return False
    else:
        print("‚ùå Error al conectar a MongoDB")
        return False

if __name__ == "__main__":
    test_mongodb_connection()
