#!/usr/bin/env python3
"""
Script de prueba para verificar la funcionalidad de autenticaci√≥n JWT
"""

import requests
import json

# Configuraci√≥n
BASE_URL = "http://localhost:8000"

def test_health():
    """Prueba el endpoint de salud"""
    try:
        response = requests.get(f"{BASE_URL}/health")
        print(f"‚úÖ Health check: {response.status_code}")
        return True
    except Exception as e:
        print(f"‚ùå Health check fall√≥: {e}")
        return False

def test_login_invalid():
    """Prueba login con credenciales inv√°lidas"""
    try:
        data = {
            "correo": "santiago@gmail.com",
            "contrase√±a": "wrongpassword"
        }
        response = requests.post(f"{BASE_URL}/auth/login", json=data)
        print(f"‚úÖ Login inv√°lido: {response.status_code} (esperado: 401)")
        return True
    except Exception as e:
        print(f"‚ùå Login inv√°lido fall√≥: {e}")
        return False

def test_protected_endpoint_without_token():
    """Prueba acceso a endpoint protegido sin token"""
    try:
        response = requests.get(f"{BASE_URL}/user/list")
        print(f"‚úÖ Endpoint protegido sin token: {response.status_code} (esperado: 401)")
        return True
    except Exception as e:
        print(f"‚ùå Endpoint protegido sin token fall√≥: {e}")
        return False

def main():
    """Funci√≥n principal de pruebas"""
    print("üß™ Iniciando pruebas de autenticaci√≥n...")
    print("=" * 50)
    
    # Verificar que la API est√© funcionando
    if not test_health():
        print("‚ùå La API no est√° funcionando. Aseg√∫rate de que est√© ejecut√°ndose.")
        return
    
    # Pruebas de autenticaci√≥n
    test_login_invalid()
    test_protected_endpoint_without_token()
    
    print("=" * 50)
    print("‚úÖ Pruebas completadas. Revisa los resultados arriba.")
    print("\nüìù Para probar completamente:")
    print("1. Crea un usuario con POST /user/create")
    print("2. Haz login con POST /auth/login")
    print("3. Usa el token para acceder a endpoints protegidos")

if __name__ == "__main__":
    main()
